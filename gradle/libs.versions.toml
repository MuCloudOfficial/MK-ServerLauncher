# !!! Do not modify or delete this file when implement or build MK-ServerLauncher !!! #

[versions]
kotlin = "2.1.21"
ktor = "3.3.0"

exposed = "1.0.0-rc-1"

androidx-lifecycle = "2.9.0"
composeHotReload = "1.0.0-alpha10"
composeMultiplatform = "1.8.1"
junit = "4.13.2"
kotlinx-coroutines = "1.10.2"

[libraries]
gson = { module = "com.google.code.gson:gson", version = "2.13.1" }
gson-extras = { module = "org.danilopianini:gson-extras", version = "3.3.0" }

netty-all = { module = "io.netty:netty-all", version = "4.2.2.Final" }
yamlkt = { module = "net.mamoe.yamlkt:yamlkt-jvm", version = "0.13.0" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version = "5.1.0" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-jte = { module = "io.ktor:ktor-server-jte", version.ref = "ktor" }
jte-kotlin = { module = "gg.jte:jte-kotlin", version = "3.2.1" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version = "1.8.1" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
jdbc-sqlite = { module = "org.xerial:sqlite-jdbc", version = "3.50.3.0" }
hikari-cp = { module = "com.zaxxer:HikariCP", version = "4.0.3" }

[bundles]
gson = ["gson", "gson-extras"]
ktor = [
    "ktor-server-core",
    "ktor-server-auth",
    "ktor-server-host-common",
    "ktor-server-status-pages",
    "ktor-server-content-negotiation",
    "ktor-server-websockets",
    "ktor-server-netty",
    "ktor-server-config-yaml",
    "ktor-server-request-validation",
    "ktor-server-cors",
    "ktor-server-jte",
    "jte-kotlin",
    "ktor-serialization-gson",
    "ktor-serialization-kotlinx-json",
]

exposed = [
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc"
]

hikari-sqlite = [ "hikari-cp", "jdbc-sqlite" ]

testPack = [
    "kotlin-test",
    "junit"
]

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }